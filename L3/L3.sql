DROP USER DEVELOPER CASCADE;
DROP USER PRODUCTION CASCADE;
DROP TABLE DEVELOPER.T1 CASCADE CONSTRAINTS;
DROP TABLE DEVELOPER.T2 CASCADE CONSTRAINTS;
DROP TABLE DEVELOPER.T3 CASCADE CONSTRAINTS;

-- Environment Configuration
CREATE USER DEVELOPER IDENTIFIED BY admin;
GRANT ALL PRIVILEGES TO DEVELOPER;
ALTER SESSION SET CURRENT_SCHEMA = DEVELOPER;

CREATE USER PRODUCTION IDENTIFIED BY admin;
GRANT ALL PRIVILEGES TO PRODUCTION;
ALTER SESSION SET CURRENT_SCHEMA = PRODUCTION;


CREATE USER DEVELOPER IDENTIFIED BY admin;
GRANT CREATE SESSION, CREATE TABLE, CREATE PROCEDURE TO DEVELOPER;
GRANT ALL PRIVILEGES TO DEVELOPER;

CREATE USER PRODUCTION IDENTIFIED BY admin;
GRANT CREATE SESSION, CREATE TABLE, CREATE PROCEDURE TO PRODUCTION;
GRANT ALL PRIVILEGES TO PRODUCTION;

ALTER SESSION SET CURRENT_SCHEMA = DEVELOPER;

GRANT EXECUTE ON DEVELOPER.dep_rec TO PRODUCTION;
GRANT EXECUTE ON DEVELOPER.dep_tab TO PRODUCTION;

GRANT SELECT ANY DICTIONARY TO DEVELOPER;
GRANT SELECT ANY DICTIONARY TO PRODUCTION;


DROP USER DEVELOPER CASCADE;
DROP USER PRODUCTION CASCADE;

CREATE USER DEVELOPER IDENTIFIED BY admin;
GRANT ALL PRIVILEGES TO DEVELOPER;

CREATE USER PRODUCTION IDENTIFIED BY admin;
GRANT ALL PRIVILEGES TO PRODUCTION;



CREATE TABLE PRODUCTION.OSISP (
    osisp_id_id NUMBER NOT NULL
);

CREATE TABLE DEVELOPER.OSISP (
    osisp_id_id VARCHAR(10) NOT NULL
);

CREATE TABLE PRODUCTION.DataStore (
    record_id NUMBER NOT NULL,
    data_field VARCHAR2(59) NOT NULL,
    CONSTRAINT pk_ProdData PRIMARY KEY (record_id)
);

-- DROP TABLE DEVELOPER.NowTask;
CREATE TABLE PRODUCTION.NowTask (
    record_id NUMBER NOT NULL,
    data_field VARCHAR2(59) NOT NULL
);

CREATE TABLE DEVELOPER.NowTask (
    record_id NUMBER NOT NULL,
    data_field VARCHAR2(59) NOT NULL,
    Newfield VARCHAR2(59) NOT NULL
);

CREATE TABLE PRODUCTION.AdditionalData (
    data_id NUMBER NOT NULL,
    content VARCHAR2(59) NOT NULL,
    CONSTRAINT pk_Additional PRIMARY KEY (data_id)
);

CREATE TABLE DEVELOPER.BaseReference (
    ref_id NUMBER NOT NULL,
    ref_value VARCHAR2(59) NOT NULL,
    CONSTRAINT pk_BaseRef PRIMARY KEY (ref_id)
);

CREATE TABLE DEVELOPER.SecondaryRef (
    main_id NUMBER(10) NOT NULL,
    linked_ref NUMBER(10) NOT NULL,
    description VARCHAR2(59) NOT NULL,
    CONSTRAINT pk_Secondary PRIMARY KEY (main_id),
    CONSTRAINT fk_SecondaryRef FOREIGN KEY (linked_ref) REFERENCES DEVELOPER.BaseReference(ref_id)
);

CREATE TABLE DEVELOPER.TertiaryRef (
    tertiary_id NUMBER(10) NOT NULL,
    secondary_link NUMBER(10) NOT NULL,
    details VARCHAR2(59) NOT NULL,
    CONSTRAINT pk_Tertiary PRIMARY KEY (tertiary_id),
    CONSTRAINT fk_TertiaryLink FOREIGN KEY (secondary_link) REFERENCES DEVELOPER.SecondaryRef(main_id)
);

CREATE TABLE DEVELOPER.LoopTable (
    loop_id NUMBER(10) NOT NULL,
    ttt NUMBER(10) NOT NULL,
    CONSTRAINT pk_Loop PRIMARY KEY (loop_id),
    CONSTRAINT fk_SelfReference FOREIGN KEY (loop_id) REFERENCES DEVELOPER.LoopTable(loop_id)
);

CREATE OR REPLACE PROCEDURE DEVELOPER.executeStepOne(inputParam INT) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Input value: ' || TO_CHAR(inputParam));
END;
/

CREATE OR REPLACE PROCEDURE PRODUCTION.executeStepOne(input VARCHAR) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(input);
END;
/
CREATE OR REPLACE PROCEDURE DEVELOPER.performActionTwo(msg VARCHAR2) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(msg);
END;
/
CREATE OR REPLACE PROCEDURE PRODUCTION.performActionTwo(msg VARCHAR2) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(msg);
    DBMS_OUTPUT.PUT_LINE(msg);
END;
/
CREATE OR REPLACE PROCEDURE DEVELOPER.handleStepThree(data VARCHAR2) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(data);
END;
/
CREATE OR REPLACE PROCEDURE PRODUCTION.specialOperation(param VARCHAR2) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(param);
END;
/
CREATE OR REPLACE PROCEDURE DEVELOPER.TestProc(data VARCHAR2) IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(data);
END;
/
CREATE OR REPLACE FUNCTION DEVELOPER.CalculateValue(inputData VARCHAR2) RETURN NUMBER IS
BEGIN
    DBMS_OUTPUT.PUT_LINE(inputData);
    RETURN 5;
END;
/
CREATE INDEX PRODUCTION.idx_DataStore_field ON PRODUCTION.DataStore(data_field);

CREATE TABLE DEVELOPER.TestAgain (
    test_id NUMBER NOT NULL,
    test_str VARCHAR2(59) NOT NULL
);

CREATE TABLE DEVELOPER.T1 (
    id NUMBER(10) PRIMARY KEY NOT NULL
);
CREATE TABLE DEVELOPER.T2 (
    id NUMBER(10) PRIMARY KEY NOT NULL
);
CREATE TABLE DEVELOPER.T3 (
    id NUMBER(10) PRIMARY KEY NOT NULL
);

-- DROP TABLE DEVELOPER.T1 CASCADE CONSTRAINTS;
-- DROP TABLE DEVELOPER.T3;
-- DROP TABLE DEVELOPER.T2;

-- t1->t3->t2

alter table DEVELOPER.T1
add c1 number(20) constraint tab1_c1_fk references DEVELOPER.T3(id);
alter table DEVELOPER.T3
add c1 number(20) constraint tab3_c1_fk references DEVELOPER.T2(id);


CREATE TABLE DEVELOPER.T11 (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);

CREATE TABLE DEVELOPER.T22 (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);


CREATE TABLE DEVELOPER.T33 (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);


ALTER TABLE DEVELOPER.T11
    ADD CONSTRAINT fk_a_b1 FOREIGN KEY (id) REFERENCES DEVELOPER.T22(id);

ALTER TABLE DEVELOPER.T22
    ADD CONSTRAINT fk_b_c1 FOREIGN KEY (id) REFERENCES DEVELOPER.T33(id);

ALTER TABLE DEVELOPER.T33
    ADD CONSTRAINT fk_c_a1 FOREIGN KEY (id) REFERENCES DEVELOPER.T11(id);


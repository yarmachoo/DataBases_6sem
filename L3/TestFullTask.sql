create table DEVELOPER.my_table(
    id VARCHAR2(100) PRIMARY KEY,
    name VARCHAR2(100)
);

CREATE TABLE PRODUCTION.my_table (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(100)
);

drop table DEVELOPER.my_table;
drop table PRODUCTION.my_table;

EXECUTE GENERATE_SYNC_SCRIPT('DEVELOPER', 'PRODUCTION');

BEGIN
    compare_schemas('DEVELOPER', 'PRODUCTION');
END;
/




CREATE TABLE DEVELOPER.t2 (
    id NUMBER PRIMARY KEY,
    val VARCHAR2(100)
);


CREATE TABLE DEVELOPER.t3 (
    id NUMBER PRIMARY KEY,
    val VARCHAR2(100)
);


CREATE TABLE DEVELOPER.t1 (
    id NUMBER PRIMARY KEY,
    val VARCHAR2(100)
);


alter table DEVELOPER.T1
add constr1 number(20) constraint tab1 references DEVELOPER.T3(id);

alter table DEVELOPER.T3
add constr2 number(20) constraint tab2 references DEVELOPER.T2(id);

EXECUTE GENERATE_SYNC_SCRIPT('DEVELOPER', 'PRODUCTION');


CREATE TABLE DEVELOPER.table1 (
    id NUMBER PRIMARY KEY,
    val VARCHAR2(100)
);

CREATE TABLE PRODUCTION.table1 (
    id VARCHAR2(100) PRIMARY KEY, 
    val VARCHAR2(100)
);

EXECUTE GENERATE_SYNC_SCRIPT('DEVELOPER', 'PRODUCTION');

BEGIN
    compare_schemas('DEVELOPER', 'PRODUCTION');
END;
/



CREATE OR REPLACE PROCEDURE DEVELOPER.my_procedure IS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Это процедура в Dev Schema');
END;
/


CREATE OR REPLACE PROCEDURE PRODUCTION.my_procedure IS
BEGIN
    DBMS_OUTPUT.PUT_LINE('Это процедура в Prod Schema');
END;
/

EXECUTE GENERATE_SYNC_SCRIPT('DEVELOPER', 'PRODUCTION');